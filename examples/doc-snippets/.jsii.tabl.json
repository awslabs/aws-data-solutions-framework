{"version":"2","toolVersion":"5.2.0","snippets":{"ea504471225e0ef8811ae1969900328b2ffd872362bfac61b26ea35ff475551d":{"translations":{"python":{"source":"dsf.DataLakeStorage(self, \"MyDataLakeStorage\",\n    bronze_bucket_name=dsf.BucketUtils.generate_unique_bucket_name(self, \"MyDataLakeStorage\", \"my-custom-bronze\")\n)","version":"2"},"csharp":{"source":"new DataLakeStorage(this, \"MyDataLakeStorage\", new Struct {\n    BronzeBucketName = BucketUtils.GenerateUniqueBucketName(this, \"MyDataLakeStorage\", \"my-custom-bronze\")\n});","version":"1"},"java":{"source":"DataLakeStorage.Builder.create(this, \"MyDataLakeStorage\")\n        .bronzeBucketName(BucketUtils.generateUniqueBucketName(this, \"MyDataLakeStorage\", \"my-custom-bronze\"))\n        .build();","version":"1"},"go":{"source":"dsf.NewDataLakeStorage(this, jsii.String(\"MyDataLakeStorage\"), map[string]interface{}{\n\t\"bronzeBucketName\": dsf.BucketUtils_generateUniqueBucketName(this, jsii.String(\"MyDataLakeStorage\"), jsii.String(\"my-custom-bronze\")),\n})","version":"1"},"$":{"source":"new dsf.DataLakeStorage(this, 'MyDataLakeStorage', {\n  bronzeBucketName: dsf.BucketUtils.generateUniqueBucketName(this, 'MyDataLakeStorage', 'my-custom-bronze')\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"aws-dsf-snippets.DataLakeStorageBucketNaming"},"field":{"field":"example"}},"didCompile":false,"fqnsReferenced":[],"fullSource":"import { Construct } from 'constructs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as dsf from 'aws-dsf';\n\nclass MyStack extends cdk.Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew dsf.DataLakeStorage(this, 'MyDataLakeStorage', {\n  bronzeBucketName: dsf.BucketUtils.generateUniqueBucketName(this, 'MyDataLakeStorage', 'my-custom-bronze')\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"11":3,"80":6,"110":2,"210":1,"211":3,"213":1,"214":1,"244":1,"303":1},"fqnsFingerprint":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"d324a439bd732ce66ff4ad93fab9107c01e0c0aa4eb360828a28af56e488fdfa":{"translations":{"python":{"source":"from constructs import Construct\nimport aws_cdk as cdk\nimport aws_dsf as dsf\n\nclass MyStack(cdk.Stack):\n    def __init__(self, scope, id):\n        super().__init__(scope, id)\n\n        dsf.DataLakeStorage(self, \"MyDataLakeStorage\")","version":"2"},"csharp":{"source":"using Constructs;\nusing Amazon.CDK;\nusing Aws.Dsf;\n\nclass MyStack : Stack\n{\n    public MyStack(Construct scope, string id) : base(scope, id)\n    {\n\n        new DataLakeStorage(this, \"MyDataLakeStorage\");\n    }\n}","version":"1"},"java":{"source":"import software.constructs.Construct;\nimport software.amazon.awscdk.*;\nimport aws.dsf.*;\n\npublic class MyStack extends Stack {\n    public MyStack(Construct scope, String id) {\n        super(scope, id);\n\n        new DataLakeStorage(this, \"MyDataLakeStorage\");\n    }\n}","version":"1"},"go":{"source":"import \"github.com/aws/constructs-go/constructs\"\nimport cdk \"github.com/aws/aws-cdk-go/awscdk\"\nimport dsf \"github.com/aws-samples/dummy/awsdsf\"\n\ntype myStack struct {\n\tstack\n}\n\nfunc newMyStack(scope construct, id *string) *myStack {\n\tthis := &myStack{}\n\tcdk.NewStack_Override(this, scope, id)\n\n\tdsf.NewDataLakeStorage(this, jsii.String(\"MyDataLakeStorage\"))\n\treturn this\n}","version":"1"},"$":{"source":"import { Construct } from 'constructs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as dsf from 'aws-dsf';\n\nclass MyStack extends cdk.Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    new dsf.DataLakeStorage(this, 'MyDataLakeStorage');\n  }\n}","version":"0"}},"location":{"api":{"api":"type","fqn":"aws-dsf-snippets.DataLakeStorageSmartDefault"},"field":{"field":"example"}},"didCompile":false,"fqnsReferenced":["aws-cdk-lib.Stack","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as dsf from 'aws-dsf';\n\nclass MyStack extends cdk.Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    new dsf.DataLakeStorage(this, 'MyDataLakeStorage');\n  }\n}","syntaxKindCounter":{"11":4,"80":13,"108":1,"110":1,"154":1,"169":2,"176":1,"183":1,"211":2,"213":1,"214":1,"233":1,"241":1,"244":2,"263":1,"272":3,"273":3,"274":2,"275":1,"276":1,"298":1,"312":1},"fqnsFingerprint":"918254096848e3b2fd522651cdddf278b6291626ad71fe8d5c7c8e0850dccadc"}}}