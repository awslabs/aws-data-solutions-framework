# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: notebook-driver-{{az}}
spec:
  # References cloud provider-specific custom resource, see your cloud provider specific documentation
  template:
    metadata:
      # Labels are arbitrary key-values that are applied to all nodes
      labels:
        role: notebook
        node-lifecycle: on-demand
        spark-role: driver

    spec:
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: notebook-driver-nodes-{{az}}

      taints:
        - key: role
          value: notebook
          effect: NoSchedule

      # Requirements that constrain the parameters of provisioned nodes.
      # These requirements are combined with pod.spec.affinity.nodeAffinity rules.
      # Operators { In, NotIn } are supported to enable including or excluding values
      requirements:
        # Include general purpose instance families
        - key: "karpenter.k8s.aws/instance-family"
          operator: In
          values: ["t3", "t3a"]
        - key: "kubernetes.io/arch"
          operator: In
          values: ["amd64"]
        # Exclude smaller instance sizes
        - key: "karpenter.k8s.aws/instance-size"
          operator: NotIn
          values: [nano, micro, small]
        - key: "karpenter.sh/capacity-type" # If not included, the webhook for the AWS cloud provider will default to on-demand
          operator: In
          values: ["on-demand"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["{{az}}"]
        - key: "karpenter.k8s.aws/instance-hypervisor"
          operator: In
          values: ["nitro"]

  # Resource limits constrain the total size of the cluster.
  # Limits prevent Karpenter from creating new instances once the limit is exceeded.
  limits:
    cpu: "40"
    memory: 160Gi

  disruption:

    consolidationPolicy: WhenEmpty

    # If omitted, the feature is disabled and nodes will never expire.  If set to less time than it requires for a node
    # to become ready, the node may expire before any pods successfully start.
    expireAfter: 720h

    # If omitted, the feature is disabled, nodes will never scale down due to low utilization
    consolidateAfter: 300s

  # Priority given to the provisioner when the scheduler considers which provisioner
  # to select. Higher weights indicate higher priority when comparing provisioners.
  # Specifying no weight is equivalent to specifying a weight of 0.
  weight: 20
  
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: notebook-driver-nodes-{{az}}
spec:
  amiFamily: Bottlerocket
  subnetSelectorTerms:
    - id: {{subnet-id}}
  securityGroupSelectorTerms:
    - tags:
        kubernetes.io/cluster/{{cluster-name}}: owned
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required

  tags:
    KarpenerProvisionerName: "notebook-driver"

  role: {{ROLENAME}}
  
